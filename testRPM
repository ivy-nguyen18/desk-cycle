#include <Servo.h>
// set up the variables
#define LED A3
#define HALL A4
const bool USE_MPH = true; // If set to false, kilometers per hour will be used instead of mph and centimeters will be used instead of inches
const int WHEEL_DIAMETER = 9; // please enter the wheel diameter in inches (or centimeters if USE_MPH is set to false)
const int RPM_SAMPLE_PERIOD = 10; // RPM is calculated based on the last 10 seconds of data
volatile long revolutions, temp, pos, counter = 0;
Servo myServo;


void setup() {
  // set up of ENCODER
  pinMode(2, INPUT_PULLUP); // internal pullup input pin 2 
  pinMode(3, INPUT_PULLUP); // internalเป็น pullup input pin 3
  //Setting up interrupt
  //A rising pulse from encodenren activated ai0(). AttachInterrupt 0 is DigitalPin nr 2 on moust Arduino.
  attachInterrupt(0, ai0, RISING);
   
  //B rising pulse from encodenren activated ai1(). AttachInterrupt 1 is DigitalPin nr 3 on moust Arduino.
  attachInterrupt(1, ai1, RISING);
  
  myServo.attach(9,544,2500);

  //set up of HE-SENSOR
  pinMode(LED, OUTPUT);
  pinMode(HALL, INPUT);

  Serial.begin (9600);

}


void loop(){
  //HE-SENSOR code
  static bool firstTime = true; // The first datapoint is not used because previousMagValue has not been assigned a meaningful value
  static long thisMagValue = 0;
  static float rpm = 0.00;
  static long mph = 0;
  static long kph = 0;
  static int magnetCount = 0; // represents how many times a magnet has been recorded
  static unsigned long timeOld = 0; 
  long previousMagValue = thisMagValue;
  thisMagValue = digitalRead(HALL);
  
  // this code will be run on every loop except the first
  if(!firstTime) 
    {
        if ((thisMagValue == 1 ) && (previousMagValue != thisMagValue))
        {
            ++magnetCount;
        }
        // Every RPM_SAMPLE_PERIOD seconds we reset the magnetCount back to 0
        if(floor((millis()-timeOld)/1000)==RPM_SAMPLE_PERIOD)
        {
            timeOld = millis();
            magnetCount = 0;
        }
        if(abs((((float)(millis()-timeOld)/1000)/60))>0.01)
        {
            rpm = (magnetCount) / (((float)(millis()-timeOld)/1000)/60);
        }

        Serial.print(rpm);
    }

    firstTime = false;

  //if magnet is read, increment revolutions
  if(digitalRead(HALL) == 1){
    revolutions ++;
  }
  
  //send value of counter to servo to change accordingly 
  if(counter != temp){ 
    temp = counter;
    pos = counter/33;
    myServo.write(pos);
  }
  
  //Prints out: rpm\counter
  Serial.print("\\");
  Serial.print(counter);
  Serial.print("\n");
   
  delay(500); //delay for .5 second 
}

void ai0() {
  // ai0 is activated if DigitalPin nr 2 is going from LOW to HIGH
  // Check pin 3 to determine the direction
  if(digitalRead(3)==LOW) {
    counter++;
    }else{
      counter--;
    }
}
   
  void ai1() {
  // ai0 is activated if DigitalPin nr 3 is going from LOW to HIGH
  // Check with pin 2 to determine the direction
  if(digitalRead(2)==LOW) {
    counter--;
    }else{
      counter++;
    }
}
